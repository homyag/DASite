# Generated by Django 5.1.5 on 2025-03-27 20:43

import ckeditor_uploader.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('short_description', models.TextField(verbose_name='Краткое описание')),
                ('client', models.CharField(max_length=100, verbose_name='Клиент')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Содержание')),
                ('result', models.TextField(verbose_name='Результат')),
                ('featured_image', models.ImageField(upload_to='cases/', verbose_name='Главное изображение')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано')),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='SEO заголовок')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='SEO описание')),
            ],
            options={
                'verbose_name': 'Кейс',
                'verbose_name_plural': 'Кейсы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='ContactRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('service', models.CharField(blank=True, max_length=100, null=True, verbose_name='Услуга')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('processing', 'В обработке'), ('completed', 'Обработана'), ('canceled', 'Отменена')], default='new', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('position', models.CharField(max_length=100, verbose_name='Должность')),
                ('company', models.CharField(max_length=100, verbose_name='Компания')),
                ('content', models.TextField(verbose_name='Содержание отзыва')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='Оценка')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='testimonials/', verbose_name='Фото')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CaseImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='cases/gallery/', verbose_name='Изображение')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.case')),
            ],
            options={
                'verbose_name': 'Изображение кейса',
                'verbose_name_plural': 'Изображения кейсов',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='case',
            name='categories',
            field=models.ManyToManyField(related_name='cases', to='core.category', verbose_name='Категории'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('preview_text', models.TextField(verbose_name='Краткое описание')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Содержание')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано')),
                ('featured_image', models.ImageField(upload_to='blog/', verbose_name='Изображение')),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='SEO заголовок')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='SEO описание')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='core_posts', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='core_posts', to='core.category', verbose_name='Категория')),
                ('tags', models.ManyToManyField(blank=True, related_name='core_posts', to='core.tag', verbose_name='Теги')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
                'ordering': ['-created_at'],
            },
        ),
    ]
